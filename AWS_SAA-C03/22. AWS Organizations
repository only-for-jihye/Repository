
1. AWS Organizations 
    Global Service 
    Allows to manage multiple AWS accounts 
    The main account is the management account 
    Other accounts are member accounts 
    Member accounts can only be part of one organization
    Consolidated Billing across all accounts - single payment method 
    Pricing benefits from aggregated usage (volume discount for EC2, S3, ...)
    "Shared reserved instances and Savings Plans discounts across accounts"
    API is available to automate AWS account creation

    Organizational Unit (OU)
        Management Account 
            OU (Dev) / OU (Prod)
    
    Advantages 
        Multi Account vs One Account Multi VPC 
        Use tagging standards for billing purposes 
        Enable CloudTrail on all accounts, send logs to central S3 account 
        Send CloudWatch Logs to central logging account 
        Establish Cross Account Roles for Admin purposes 
    Security : Service Control Policies (SCP)
        IAM policies applied to OU or Accounts to restrict Users and Roles 
        They do not apply to the management account (full admin power)
        Must have an explicit allow (does not allow anything by default - like IAM)
    
    SCP Hierarchy
        Policies를 상속받기 때문에, 위에서 명시적으로 Deny한 사항에 대해서는 해당 계정 위치에서 Authroized를 하더라도 Deny된다 .
    

2. IAM - 고급
    IAM Conditions 
        aws:SourceIP 
            restrict the client IP from which the API calls are being made 
        aws:RequestedRegion
            restrict the region the API calls are made to 
        ec2:ResourceTag 
            restrict based on tags 
        aws:MultiFactorAuthPresent
            to force MFA 
    
    IAM for S3 
        s3:ListBucket permission applies to arn:aws:s3:::test
                                            -> bucket level permission 
        s3:getObject, s3:PutObject, s3:DeleteObject applies to arn:awn:s3:::test/*
                                                                                -> object level permission 
    
    Resource Policies & aws:PrincipalOrgID 
        aws:PrincipalOrgID can be used in any resource policies to restrict access to accounts that are member of an AWS Organization


3. IAM - Resource-based Policies vs IAM Roles 
    Cross account :
        attaching a resource-based policy to a resource (example: S3 bucket policy)
        OR using a role as a proxy 
            User Account A  ------------>  Role Account B  --------------->  Amazon S3
            User Account A  --------------------------> S3 Bucket Policy ->  Amazon S3 
        When you assume a role (user, application or service), you give up your original permissions and take the permissions assigned to the role 
        When using a resource-based policy, the principal doesn't have to give up his permissions 
        Example : User in account A needs to scan a DynamoDB table in Account A and dump it in an S3 bucket in Account B 
        Supported by : Amazon S3 buckets, SNS topics, SQS queues, etc ...

    Amazon EventBridge - Security 
        When a rule runs, it needs permissions on the target 
        Resource-based policy : Lambda, SNS, SQS, CloudWatch Logs, API gateway ...
            EventBridge Rule --> Lambda with "Resource based Policy" e.g. Allow EventBridge 
        IAM role : Kinesis Stream, Systems Manager Run Command, ECS task ...
            EventBridge Rule (IAM Role) --> Kinesis 


4. IAM 정책 평가
    IAM Permission Boundaries 
        IAM Permission Boundaries are supported for users and roles (not groups)
        Advanced feature to use a managed policy to set the maximum permissions an IAM entity can get 
    
        Can be used in combinations of AWS Organizations SCP 
            Use cases :
                Delegate responsibilities to non administrators within their permission boundaries, for example create new IAM users 
                Allow developers to self-assign policies and manage their own permissions, while making sure they can't "escalate" their privileges (= make themselves admin)
                Useful to restrict one specific user (instead of a whole account using Organizations & SCP)
        
    IAM Policy Evaulation Logic 
        Deny evaluation -> Organizations SCPs -> Resource-based policies -> Identity-based policies -> IAM permissions boundaries -> Session policies 
    
    Example IAM Policy 
        {
            "Version": "2022-12-12",
            "Statement": [
                {
                    "Action": "sqs:*",
                    "Effect": "Deny",
                    "Resource": "*"
                },
                {
                    "Action": [
                        "sqs:DeleteQueue"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                }
            ]
        }
        Can you perform sqs:CreateQueue?
            -> NO 
        Can you perform sqs:DeleteQueue?
            -> NO 
        Can you perform ec2:DescribeInstances?
            -> NO
        => 명시적으로 Deny/Allow가 있어야 한다.


5. AWS IAM Identity Center (successor to AWS Single Sign-On)
    One login (single sign-on) for all your 
        AWS accounts in AWS Organizations 
        Business cloud applications (e.g., Salesforce, Box, Microsoft 365, ...)
        SAML2.0-enabled applications 
        EC2 Windows Instances 
    Identity providers 
        Built-in identity store in IAM Identity Center 
        3rd party : Active Derectory (AD), OneLogin, Okta, ...

    Fine-grained Permissions and Assignments 
        Multi-Account Permissions 
            Manage access across AWS accounts in your AWS Organization 
            Permission Sets - a collection of one or more IAM Policies assigned to users and groups to define AWS access 
        Application Assignments 
            SSO access to many SAML 2.0 business applications (Salesforce, Box, Microsoft 365, ...)
            Provide required URLs, certificates, and metadata 
        Attribute-Based Access Control (ABAC)
            Fine-grained permissions based on users' attributes stored in IAM Identity Center Identity Store 
            Example : cost center, title, locale, ...
            Use cases : Define permissions once, then modify AWS access by changing the attributes 
    

6. Active Directory 
    What is Microsoft Active Directory (AD) ?
        Found on any Windows Server with AD Domain Services 
        Database of objects : User Accounts, Computers, Printers, File Shares, Security Groups 
        Centralized security management, create account, assign permissions 
        Objects are organized in trees 
        A group of trees is a forest 
    
    AWS Directory Services 
        AWS Managed Microsoft AD 
            Create your own AD in AWS, manage users locally, supports MFA 
            Establish "trust" connections with your on-premise AD 
                <--auth--> On-prem AD <--trust--> AWS Managed AD <--auth-->
        AD Connector 
            Directory Gateway (proxy) to redirect to on-premise AD, supports MFA 
            Users are managed on the on-premise AD 
                On-prem AD <--proxy-- AD Connector <--auth--
        Simple AD 
            AD-compatible managed directory on AWS
            Cannot be joined with on-premise AD 
                On-prem AD <--proxy-- Simple AD <--auth--
    
    IAM Identity Center - Active Directory Setup 
        Connect to an AWS Managed Microsoft AD (Directory Service)
            Integration is out of the box 
                IAM Identity Center <--connect--> AWS Managed Microsoft AD 
        Connect to a Self-Managed Directory 
            Create Two-way Trust Relationship using AWS Managed Microsoft AD 
            Create an AD Connector 
                IAM Identity Center <--connect--> AWS Managed Microsoft AD <--two-way trust relationship--> Microsoft Active Directory
                                    <--connect--> AD Connector <--proxy--> Microsoft Active Directory

    
7. AWS Control Tower 
    Easy way to set up and govern a secure and compliant multi-account AWS environment based on best practices 
    AWS Control Tower uses AWS organizations to create accounts 
        Benefits :
            Automate the set up of your environment in a few clicks 
            Automate ongoing policy management using guardrails 
            Detect policy violations and remediate them 
            Monitor compliance through an interactive dashboard 
        
    AWS Control Tower - Guardrails
        Provides ongoing governance for your Control Tower environment (AWS Accounts)
        Preventive Guardrail - using SCPs (e.g., Restrict Regions across all your accounts)
        Detective Guardrail - using AWS Config (e.g., identify untagged resources)


