
1. IAM : global service
     -> 그룹에는 사용자만 위치
     -> NO USE : group in group 
     -> In AWS you apply the least privilege principle 

    -> json format
        * Consists of
            Version : policy language version, always include "2012-10-17"
            Id : an identifier for the policy (optional)
            Statement : one or more individual statements (required)
        * Statements consists of
            Sid : an identifier for the statement (optional)
            Effect : whether the statement allows or denies access (Allow, Deny)
            Principal : account/user/role to which this policy apllied to
            Action : list of actions this policy allows or denies
            Resource : list of resources to which the actions applied to
            Condition : conditions for when this policy is in effect (optional)


2. How can users access AWS ?
    To access AWS, you have three options
        1) AWS Management Console (protected by password + MFA)
        2) AWS Command Line Interface (CLI) : protected by access keys
        3) AWS Software Developer Kit (SDK) : for code: protected by access keys 
            -> Language-specific APIs (set of libraries)
              Enables you to access and manage AWS services programmatically
              Embedded within your application
              Supports (SDKs : JavaScript, Python, PHP, .NET, Ruby, Java, Go, Node.js, C++)
                        Mobile SDKs (Android, iOS ../)
                        Iot Device SDKs (Embedded C, Arduino, ...)
                        -> Boto (Python SDKs)
    Access Keys are generated through the AWS Console
    Users manage their own access keys
    Access Keys are secret, just like a password. Don't share them
    Access Key ID ~ = username
    Secret Access Key ~ = password 

3. IAM Security Tools
    IAM Credentials Report (account-level)
        - a report that lists all your accont's users and the status of their various credentials
        - csv format으로 각 IAM마다 리포트를 생성
        - 패스워드 변경 등 계정 파악에 유용
    IAM Access Advisor (user-level)
        - Access advisor shows the service permissions granted to a user and when those services were last accesed
        - You can use this information to revise your policies
        - 각 User의 Access Advisor에서 4시간 이내 내역만 보임
        - 각 User가 어떤 서비스에 Access 했는지 확인 가능

4. IAM Guidelines & Best Practices
    Don't use the root account except for AWS account setup
    One physical user = One AWS user
    Assign users to groups and assign permissions to groups
    Create a strong password policy 
    Use and enforce the user of Multi Factor Authentication (MFA)
    Create and use Roles for giving permissionsto AWS services
    Use Access Keys for Programmatic Access (CLI / SDK)
    Audit permissions of your account with the IAM Credentials Report 
    Never share IAM users & Access Keys

5. IAM Section - Summary 
    Users : mapped to a physical user, has a password for AWS Console 
    Groups : contains users only 
    Policies : JSON document that outlines permissions for users or groups 
    Roles : for EC2 instances or AWS services 
    Security : MFA + Password Policy 
    AWS CLI : manage your AWS services using the command-line 
    AWS SDK : manage your AWS services using a programming language
    Access Keys : access AWS using the CLI or SDK 
    Audit : IAM Credential Reports & IAM Access Advisor 
        

IAM 보안 도구
    - IAM 자격 증명 보고서 (IAM Credential Report)
    - IAM Access Advisor 

IAM 정책의 문장
    - 시드, 효과, 원칙, 조치, 리소스, 조건
    - 버전은 IAM 정책 자체의 일부로 문장의 일부가 아님 

