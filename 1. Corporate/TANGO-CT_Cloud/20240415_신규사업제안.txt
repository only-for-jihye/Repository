# 2024.04.15 신규사업제안

1) S3 구축 (MinIO 활용)
    MInIO는 Object Storage
        -> Object Storage는 동일한 파일명에 데이터를 쓸 경우, overwrite 된다.
        -> 동일한 파일에 데이터를 계속 쓰기 위해서는 별도의 방법이 필요하다.
        -> OCgw 구성에서는 EMS 단에서의 수정이 필요할 수 있다. 항상 파일의 마지막에 데이터를 써야 함
            -> 파일 length 및 size에 대해 먼저 확인해야하는 logic 구성 필요 (초당 데이터가 x건이상 수집되는 FM ALARM은 구현 어려움?)
        -> 하나의 파일에 여러 데이터를 append 하기 위해서는 여러 개의 객체를 사용하여 저장하는 방법 뿐.
        
    minIO는 k8s를 통해 container 구성 가능
        -> PV 및 PVC 구성 가능
        -> Object Storage로서 파일 format 제한 없음
        -> Python과 같이 remote process에서 minIO로 데이터를 저장하기 위해서는 관련 Library 가 필요
        -> pod image minIO Client 설치가 필요함
        -> minIO로 접근 시 end point는 load balancer 구성이 필요하며, Access Key, Secret Key와 같은 인증 정보가 필요함

    구축 방법
        1. minIO를 사용할 storage pv, pvc 구성 
        2. minIO pod 구성 (StatefulSet 또는 deployment) 및 배포
        3. Service(LB) 구성 및 Ingress 설정 -> UI (Console) 사용 가능

    데이터 전송 방법
        1. minIO CLI 를 통한 데이터 저장
            : minIO 클라이언트가 설치 필요
            ex) mc cp /local/path/to/file myminio/pv-path/
        2. API
            : minIO 클라이언트 설치 불필요
            ex) curl -X PUT --upload-file /local/path/to/file http://minio-service-endpoint:9000/bucket-name/pv-path/file-name
    

2) OCgateway Cluster 구성 방법
    1. MinIO 설치 (Storage)
        - MinIO는 Object Storage라서 ... 한계가 있음
            -> Ceph
            -> GlusterFS
            -> OpenIO
    2. Pacemaker 설치 (HA)
    3. HAProxy 설치 (LB)


Storage : GlusterFS와 Lustre
    - Lustre는 MDS, OSS 서버 구성 필요
        MDS는 1대, OSS는 2대 등
    - GlusterFS
    

    - VIP는 Pacemaker로 사용

