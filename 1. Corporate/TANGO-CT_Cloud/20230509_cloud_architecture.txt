# 2023.05.09 cloud architecture
# sk bp 교육 수강

On Premise vs. Cloud
    - On Premise (단점)
        1. HW, SW 구입
        2. IT 직원 고용
        3. 네트워크/보안 관리 및 문제 해결
        4. Application 설치
        5. Error 교정 및 유지 보수
        6. OS, DB, Application Update, 의존성 문제
        7. 새로운 서비스 개발 및 프로젝트 수행
        8. IT Helpdesk 운영 등 ..
    - Cloud
        (장점)
            1. 신속한 인프라 도입
            2. 유연한 인프라 관리
            3. 예상치 못한 트래픽 폭주 대응
            4. 손쉬운 글로벌 서비스
            5. 강력한 보안과 장애 없는 서비스 - 무중단 서비스
            6. 합리적인 요금제 - ?.. 결코 저렴하진 않음
        (단점)
            1. 생각보다 비싼 이용 비용 (생각보다 비싼 유지비) -> 유지비용 감소를 위한 LB, AutoScaling 등 ..추가 사용
            2. 점점 커지는 클라우드 의존도
            3. 데이터 보관의 불안함

Cloud의 특징과 장점
    - NIST에서 정의한 클라우드의 특징
        1) 주문형 셀프 서비스 : 인건비 감소 위함
        2) 광범위한 네트워크 접속
        3) 리소스의 공유
        4) 신속한 확장성
        5) 측정 가능한 서비스 : Metering (종량제)
    - 장점
        1) 경제성 : 필요한 기간 동안만 사용 - 서버 비용 등 고정 비용 없음
        2) 유연성 : 필요한 만큼 확장 가능
        3) 가용성 : 안정적인 구축 및 운영
        4) 빠른 구축 속도 : 미리 만들어놓은 이미지(AMI, Amazon Machine Image)들이 있음

Cloud의 유형
    1. SaaS (Software as a Service)
        - 소프트웨어를 클라우드에서 제공하는 서비스
        - Salesforce.com : ERP, CRM 등을 크랄우드를 통해 제공
        - Multi-Tenancy : 공동의 SW를 다른 회사들과 같이 사용, 데이터와 사용자는 회사 단위로 분리되어서 이용하는 방식
    2. PaaS (Platform as a Service)
        - 개발 플랫폼을 클라우드에서 제공하는 서비스
        - 주로 오너 개발자(개발자가 독립해서 스타트업 회사 설립)등을 대상으로 개발 환경을 제공
        - SNS 서비스가 대부분 해당
        - 스타트업에서 많이 개발
    3. IaaS (Infrastructure as a Service)
        - 인프라를 제공해주는 서비스
        - 비용이 상대적으로 낮음
        - On-premise와 유사한 방식으로 클라우드에 구현 가능 (Lift and Shift)
        - 클라우드 서비스 제공자(CSP, Cloud Service Provider)들의 경쟁 치열 -> 스펙 비교 가능, 저렴한 서비스로 이동
    4. SECaaS (Security as a Service)
        - 보안 서비스를 클라우드에서 제공하는 것
        - 출입통제(얼굴, 카드키, 지문 및 출입시간 기록 등), 악성코드로 의심되는 파일을 클라우드로 업로드해서 분석(ex. V3)

On-premise와 Cloud 비용 구조
    - On-premise 
        도입비용 (목돈...) - 데이터 센터 구축, 회선, 서버, 네트워크, 소프트웨어, 인건비, 개발비 등 ...
        운영비용 - 관리 비용, 리스/렌탈 비용, 인건비, 보수비 등 ...
    - Cloud
        도입비용 - 초기 비용
        운영비용 - 유지 비용

책임 범위
    - SaaS, PaaS, IaaS
    사용자의 책임 범위 vs 사업자의 책임범위
    SaaS -> PaaS -> IaaS
        사용자의 책임 범위가 증가
        사업자의 책임 범위가 감소
    
클라우드의 대표적인 네트워크 기능
    EIP (Elastic IP)
    DNS
    Load Balancer
    VPN Gateway 등

HyperVisor와 Container
    HyperVisor
    - 구성 : 하드웨어 - 하이퍼바이저 - 게스트OS 1, 2 - 각 1,2마다 app.
    - 장점 : 가상 서버마다 OS를 각각 다르게 설치 가능, 가상 서버들이 완전히 분리되어 있어 하나가 뻗어도 영향 없음
    - 단점 : 각각 OS를 설치하다보니.. CPU 등 자원 사용 비효율적
    - OS 기능 일부와 가상 환경 지원하는 기능 중 꼭 필요한 기능을 골라 가볍게 만듦

    Container
    - 구성 : 하드웨어 - 호스트OS - 컨테이너 관리 SW - 실행환경/app. 1,2,3
    - 대표적 : docker
    - 장점 : 하나의 호스트 OS에서 여러개의 OS를 동시 사용 가능
            다른 컨테이너에 복사하거나 마이그레이션 하기가 쉬움
            가상화 환경 위에서 별도의 OS를 동작시킬 필요가 없어 개발 컨테이너가 요구하는 하드웨어 리소스가 적으며 부팅이 빠름
    - 단점 : 호스트 OS와 컨테이너는 커널을 공유, Linux 커널에서 Windows 컨테이너를 동작시키는 것이 불가능
            하나의 호스트 OS가 여러 개의 컨테이너를 동작시키므로 한 컨테이너가 사이버 공격을 받으면 다른 컨테이너도 위험에 노출될 가능성이 있음
    - 컨테이너 단위를 사용하기 때문에 가벼워서 많은 컨테이너를 사용 가능 - docker

Scaling : 인프라를 줄이고 늘리는 것
    - Scale out : 양적 증가
    - Scale in : 양적 감소

    - Scale up : 질적 증대
    - Scale down : 질적 감소

    - Auto Scaling : 규모를 늘리고 줄이는 것을 자동으로 하는 것
        - Scale in/out

Cloud Native
    - Application을 MSA 구조로 분할하여, 각 부분을 컨테이너로 패키징, 그리고 이 컨테이너들을 오케스트레이션하여 리소스 최적화
    - 클라우드의 장점을 최대한 살려서... 클라우드에서 Application이 최적의 조건으로 동작하는 것
        (AutoScaling, Backup, 분산 저장 등) .. IaaS/PaaS/Saas 등을 잘 조합해서 구축하는 것
    - MicroService : 서비스 안정성과 스케일링 용이성 개선
    - DevOps : App 서비스 개선 속도 증가
    - Continuous Delivery : CI/CD 업무를 통한 개발-운영 간 업무 속도의 증가
    - Containers : 컨테이너를 통한 IT 이식성과 유연성 확보

    Agile
        - Waterfall 모델은 On-premise에서 적합
        - 클라우드에서는 Agile Dev.를 적용 (Pilot 모델)
    DevOps
        - Development와 Operation을 동시에 같은 팀이 수행하는 것

클라우드 운영 환경
    - Cloud Native
        - 하나의 CSP에 의존하면 의존성이 높아져 분쟁 발생 시 이전 어려움
        - 비용, 장애, 성능 등 관리 편리하지만 내부 인력의 노하우 결핍 우려
    - Hybrid Cloud
        - On-Premise와 Cloud를 동시에 사용
        - 보안 및 Compliance를 세심히 살펴봐야 함
    - Multi-Cloud
        - 여러 CSP의 Cloud Service를 활용하는 전략
        - 대기업에서 사업부 단위로 다른 CSP를 선택하기도 함
        - 고객사 IT 업무를 대행하는 경우

Application Migration
    - Lift and Shift
        - On-Premise 환경을 들어서 그대로 Cloud로 Migration
        - IP 주소 등 변경 -> 변경의 최소화
    - Re-engineering
        - 클라우드 환경에 맞게 재구성
        - IT Infra 설계부터 Application, Backup 등 Cloud 최적화



