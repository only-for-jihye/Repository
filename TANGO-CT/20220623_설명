# 2022.06.23_설명


1. python2 -> python3 Upgrade
    - python2.7.12 -> 3.9.2
        - python2에서 python3로 주된 변경 사항
            - python2에서의 기본 저장 방식은 ASCII로 unicode 방식으로 저장하기 위해서는 별도의 설정이 필요했음
            - python3는 기본 저장 방식이 unicode로 변경됨
              따라서 모든 문자열인 unicode인 str 클래스이기 때문에.. 각 함수/클래스 별에 따라 bytes -> str, str -> bytes로 변환 필요
            - 최재호 부장님께서 만들어주신 common.utilitys에 to_str, to_bytes 함수를 활용, Adaptor Test간 형변환 오류가 출력될 시, to_str(), to_bytes()를 사용하여 변환
            - LteNmsWoker.py와 같이 isinstance 구문에 unicode or str ? ,
            bytes or str ? 로 변경 등..

    - print 구문 변경
        - print "Hello" -> print("Hello)

    - 예외처리
        - 기존 - except: 
        - 변경 - except Exception as e :
                 logger.exception(str(e))

    - 내장 함수 변경
        - 범위 지정 : python2의 xrange()와 python3의 range() 동일
            python3에는 xrange()가 사라지고 range()만 사용 가능
        - iter, next : 반복기 (List 형태의 Noti 파일 읽을 때 사용)
            next() -> __next__()
            iter() -> __iter__()

    - 그리고... 필요한 py 파일들을 기존 svn repo.에서 프로젝트로 가져와서 신규 프로젝트로 가져옴


2. docker image 만들기
    - docker image로 만들기 위해서 필요한 것들 ..
        1. BMT에서 최재호 부장님께서 만들어두신 Docker 파일에 대해 공부하고 변경할 것만 변경했음
        2. /home/tangooc/TANGOOC/adaptor 디렉토리 -> adaptor3로 바꾸고
        3. 최종 변경 시점 (6/16 12시) 소스로 adaptor_pack_2022061612.tar.gz 만듦
        4. python3에 zookeeper 연동을 위한 kazoo 패키지 설치해서 python tar.gz 파일도 만듦
        5. 테스트를 위한 config 파일 복사 (이건 docker images 내에서 python을 돌려보기 위함)

        - adaptor_pack.tar.gz / python.tar.gz 파일을 tg-d5-om-spk1에서 만들어서
        scp로 tg-s-a-emsgs2에 /home/tangosvc/project/TANGO_O_K8S/deploy/version-unmanaged/docker/tango/oc/adaptor로 전송
        
    - docker image 만들기 (위 서버, 위 디렉토리에서 진행)
        docker build --tag tango-o-oc-test:0.1 .
        docker tag tango-o-oc-test:0.1 90.90.227.21:5000/tango-o-oc-test:0.1
        docker push 90.90.227.21:5000/tango-o-oc-test:0.1
        * Docker images build 주의점
            - Docker build 시, 파일은 항상 DockerFile이 존재하는 위치에 있어야함
            - 여기서 말하는 파일이란, COPY 또는 ADD에 사용하는 파일이고
            - 컨텍스트 기준으로 DockerFile이 존재하는 곳에서 생성됨
            - tar 파일은 압축이 풀려서 추가됨
        받고자하는 서버에서 docker 이미지 pull
        docker pull 90.90.227.21:5000/tango-o-oc-test:0.1


3. docker image 내에서 python을 돌려보기
    - docker 참고
        1. docker commit
            docker container를 image로 생성
            commit 명령어를 실행하는 시점의 docker container 상태가 보존
            현재 docker container의 상태를 백업하는 경우에 자주 사용
        2. docker build
            Dockerfile 이라는 단순 텍스트 파일를 사용하여 image 생성
            Dockerfile 은 지정된 문법을 지켜야 함
            Dockerfile 을 작성하고 공유하면 image의 구성을 쉽게 알 수 있음
    
    - docker image에 /bin/bash로 접속해보기
        docker run -it {docker container id} /bin/bash
    - 직접 돌려보려면 ZOOKEEPER_HOSTS와 POD_NAME을 환경변수로 설정해야함
        export ZOOKEEPER_HOSTS=''
        export POD_NAME=''


4. k8s 올리기
    1. master node 접속 (tg-s-a-emsgs1)
    
    2. node 정보 확인
        kubectl get nodes
    
    3. cd /home/tnagosvc/deploy-work/kube-files/tango-o-oc/adaptor-config

    4. 순서대로 필요한 yaml 파일 실행
        1. namespace 생성
            kubectl apply -f oc_name_spaces_js.yaml
        2. configmap 생성
            configmap은 sh로 만들었음
            ./oc_configmap_js.sh
        3. service 생성
            StatefulSet은 Service가 필수, headless 서비스 (ClusterIP:None) 만듦
        4. serviceAccount 생성
            kubectl apply -f oc_sa_js.yaml
        5. StatefulSet pod 실행
            kubectl apply -f tgo-oc-adaptor-5g-ss-ran-pm_js_sts.yaml
        
    5. 실행 결과 보기
        kubectl get pods -n oc-proc-test
        kubectl describe pods -n oc-proc-test |more
    
    6. pod 로그 확인하고 접속해보기
        kubectl -n oc-proc-test logs -p oc-adaptor-5g-ss-ran-pm-0

        * badrequest가 뜰 때,
        kubectl logs --namespace=oc-proc-test -p oc-adaptor-5g-ss-ran-pm-0 --previous=false
            * tail도 걸수 있음, 마지막에 -f

        * 동작중인 pod에 들어가서 확인하기
        kubectl exec --stdin --tty oc-adaptor-5g-ss-ran-pm-0 -n oc-proc-test -- /bin/bash

    7. 테스트
        테스트 기준, adaptor container는 tg-d5-om-spk1에 데이터를 연동하고 있고
        같은 서버의 DummySbiServer에 데이터를 전송하고 있음

        - init-Container가 ADAPTOR_CONFIG_FILENAME을 잘 떨구는지 보기
        - adaptor-Container가 잘 실행되는지 보기
        - DummySbiServer로 전송되는지 보기
        - zookeeper adaptor/config/seed 확인

