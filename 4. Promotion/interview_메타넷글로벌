
메타넷 글로벌 - Cloud Native + Agile
    SaaS
    SAP on Cloud (SAP ERP) - SAP HANA, SAP S/4HANA 
        SAP S/4HANA : AI, 머신러닝, 고급 분석 등의 지능형 기술을 탑재해 완전한 전사적자원관리(ERP) 시스템

- 업무 효율화

일일 트래픽 약 20~25 TB 정도...

Aigle과 Microservice 에도 관심이 있다고 어필할것!!


포지션 - 삼성전자의 DS부문 업무시스템을 클라우드 기반으로 개발하는 것이 주된 역할과 미션입니다. 

어필 - 클라우드 백엔드 개발 쪽에 포커스가 있지만 어플리케이션 설계/개발에 대한 충분한 관심을 보이시는 것이 유리합니다. (관련 경험이 있다면 어필)

삼성 비즈니스의 경우 새로운 기술과 방식을 적용하는 프로젝트가 많아 최근 기술에 대한 이해도를 중요하게 볼 가능성이 높습니다. 

개발자로서 역량은 충분하시기 때문에 기술적인 답변에 있어 신뢰성을 주는 것이 필요할 것으로 생각됩니다. 

자신감 있게 긍정적으로 대화를 하시면 좋은 결과가 있을 거라 생각됩니다.



- 개발 뿐 아니라 시스템 설계 경험을 구체적으로 전달하는 것이 좋습니다. (설계+개발)
    : 2022년부터 2023년까지 진행된 3,4차 Public Cloud 전환 사업에서 고객사의 Application Modernization 요구사항에 맞춰 설계와 개발한 경험이 있습니다.
    Legacy Application 소스의 불필요한 부분과 중복된 부분을 제거하였고 Python2로 개발되었던 것을 Python3로 업그레이드 했습니다.
    또한 On-Premise 리소스 기반으로 개발되었던 부분들을 AWS 리소스들을 사용하여 반영했습니다.
    
- 미래 목표 :전문가로 성장하고자 하는 목표나 의지를 중시하기 때문에 단순히 개발자에 머물지 않고
            장기적으로 아키텍트 또는 PM/PL로 성장하는 지향점을 갖고 말씀하시는 것이 좋습니다.
            (대형 고객이나, 난이도가 높은 다양한 프로젝트를 해 보고 싶은 의지. 이런 부분이 필요)
    : 클라우드 백엔드 개발자로 시작하여 향후 솔루션 아키텍트나 클라우드 사업의 PL로 성장하고 싶습니다.
    메타넷의 고객사들 중에는 국내와 전세계에서 알아주는 기업들이 있습니다.
    제가 SKT를 고객사로 TANGO라는 큰 프로젝트를 경험했다하더라도 제가 경험한 부분은 팀 하나에 불과하기 때문에 작은 부분입니다.
    기술 스택을 더 쌓고 이론적인 공부도 게을리 하지 않도록 노력하여 메타넷 구성원으로서 주변 동료부터 회사까지 도움이 되는 인재가 되겠습니다.
  
- 기술 스택이나 활용 경험 부분은 과장할 필요는 없지만, 단순 관심 정도로 보이거나 
  새로운 기술 습득에 소극적으로 보이면 전형에 불리할 수 있습니다.
- 자신의 보유 기술과 업무 경험은 디테일하게 설명할 수 있어야 합니다.
  해 본 것을 단순하게 전달하기 보다는 프로젝트를 통해 느낀 점이나 파악한 점을 얘기하고,
  성과나 계획을 얘기하는 것이 좋습니다. (자신의 생각을 담아서 얘기해야 함)
    : 2023년 7월부터 12월까지 진행한 수집부 구조개선 프로젝트에서 프로젝트 매니저와 백엔드 개발자를 담당했습니다.
    이 프로젝트는 제가 담당하고 있는 팀에서 수집하는 데이터들을 SKT 여러 팀에서 활용하고 있고 다른 팀에서도 데이터 제공을 요청하는 등
    수집팀에 대한 중요성이 높아짐에 따라 데이터 모니터링 시스템을 구축하는 것이 목표였습니다.
    Waterfall 방식으로 진행되는 프로젝트로 각 단계가 일정에 맞게 진행되어야 했습니다. 앞 단계에서 지연되면 뒷 단계의 일정에 문제가 생기기 때문입니다.
    저는 수집팀 프로젝트 매니저로서 사업 제안부터 요구사항 정의, 분석, 설계, 구현, 테스트, 배포 등 모든 일정을 관리했습니다.
    또한 백엔드 개발자로서의 역할도 담당했기 때문에 Python, Spring boot, Java, RestAPI 등의 기술을 사용했고 
    AWS의 RDS Aurora MySQL, MSK (Amazon Managed Streaming for Apache Kafka), EKS를 사용하여 컨테이너로 배포했습니다.
    그리고 기존에 있었던 모니터링 대시보드 화면을 참고하여 수집상태감시 DashBoard 화면을 설계하고
    UI 담당 부장님과의 협업을 통해 수집상태감시 대시보드 화면을 구현하였습니다.
    위 프로젝트의 결과로 그동안 데이터 미수집 이슈 발생 시, 데이터를 확인하기 위해 운영자가 서버를 찾아 접속하고 확인 하는 등의 수고를
    화면 하나로 대체할 수 있게 되었습니다. 또한 데이터가 평균보다 감소하거나 증가했을 때 임계치 별로 SMS/MMS를 전송받을 수 있어 사전 센싱 역할도 하게 되었습니다.
    이 프로젝트의 결과물인 수집상태 대시보드를 통해 그동안 캐치하지 못했던 여러 이슈 사항들에 대해 더 확인하게 되었고,
    나아가 공동운용망 프로젝트, 수집상태감시 V2 등 추가 프로젝트를 추진하기도 했습니다.
    이 프로젝트를 경험하면서 프로젝트 매니저로서 첫 경험을 하게 되었습니다. 고객사와의 커뮤니케이션에 대한 중요성을 깨달았고
    팀 내부에서 상급자 분들께서도 프로젝트 일원으로서 저를 존중해주시고 협업해주셔서 향후 프로젝트 매니저로서의 길도 고려하고 있습니다.
    클라우드 기술에 대해 공부하고 싶어 Naver Cloud Platform의 Expert 자격증을 지난 3월에 취득했고, 
    현재는 AWS Solution Architect 자격증을 준비하고 있습니다.



- 해당 직무의 전문성에 대한 자신감, 팀워크, 협업 마인드 필요합니다.
  자신감이 없어 보이거나 커뮤니케이션이 클리어하지 않은 경우 탈락하는 사례가 많습니다.



-- 경력기술서
프로젝트명 : SKT 차세대 OSS 분석/설계/구축 (TANGO : T-Advanced Next Generation OSS)
- 발주처 : SK C&C / SKTelecom
- 프로젝트 기간 : 2018.10 ~ 현재
- 개요 : Eng.-구축-운용에 걸쳐 세분화된 Network Tool들을 통합하고 데이터를 분석하여 통합 감시 및 제어하는 차세대 네트워크 Management 환경 제공
- 담당역할 : 2018.10 ~ 2019.03 TANGO 운용 성능관리 개발팀
            2019.04 ~ 현재 TANGO 운용 수집관리 운영팀
- 운영 업무를 중심으로 시작하여 개발 업무에도 참여하였음
- 주요 성과 :
    Raw Data 분석 및 Parsing Rule 관리 (csv to json (kafka message))
    수집관리 프로세스 운영/점검
    수용 장비 및 프로세스 문서화 관리
    운영업무 매뉴얼 및 연동규격 문서 관리
    내/외부 이해 관계자 커뮤니케이션 관리
    Infra/App 장애 대응 및 개선점 도출
    운영/개발 실적 관리 및 CR 계약 회의 참여
    작업 및 배포 내역 관리
    VOC 유선/이메일 관리
    프로젝트 산출물 관리
    주요 App Source 보완/개선/개발 (Python)
    프로젝트 관리를 위한 Confluence, Xwiki 사용
    데이터 연동을 위한 내?외부 인터페이스 관리 (FEP, Gateway, RestAPI, Kafka, TL1, ETL)


프로젝트명 : SKT TANGO 클라우드 전환 사업
- 발주처 : SK C&C / SKTelecom
- 프로젝트 기간 : 2022.03 ~ 현재
- 개요 : On-Premise의 Infra/App을 Public Cloud (AWS)로 이전하는 사업, 일부 Infra는 On-Premise에 위치하여 Hybrid Cloud로 운영 및 개발
- 담당역할 : 2022.03 ~ 현재 TANGO 운용 수집관리 운영팀
- Application Container 분석/설계/구현/테스팅
- 주요 성과 :
    Application AS-IS 분석, TO-BE 설계, 구현, 테스팅, 운영
    On-Premise Application Python2 -≫ Python3 Upgrade
    On-Premise APP 및 Infra, DB를 Public Cloud로 Migration
    Docker, K8S, HelmChart DEV 환경 구성 및 App 테스팅
    AWS Solution 적용을 위한 설계 및 구현
    CI/CD 설계 및 구현
    Public Cloud 운영 안정화 및 비용 절감을 위한 Container별 리소스 관리
    프로젝트 일정 관리를 위한 Jira 및 Confluence 사용
    팀 내 지식/업무 공유를 위한 XWiki 사용
    신입사원 클라우드 기본 교육 (Docker, K8S, HelmChart, AWS)
- 개발 상세 내용 :
    ECR base-python / base-java 이미지 설계 및 구현, LifeCycle : CentOS -≫ Amazon Linux2 -≫ AL2 graviton
    CodeCommit Repository 내 Docker File 및 buildspec.yaml 구성
    CodeBuild 구성 및 Parameter Store image tag 관리
    Code Pipeline 구성 ? CodeCommit + CodeBuild
    ArgoCD? CodeCommit 연동
    InitContainer 설계 및 구현 : Container별 상태코드를 주키퍼에 znode로 생성하여 관리
    Source Python 2.7.12 -≫ 3.9.13 Upgrade 적용 : 일부 소스 수정 및 불필요 소스 삭제
    Container 특성에 따른 Pod toleration 설정 : Routing / Non-Routing / NATgateway 별 EC2 instance 구성
    Storage 설정/관리 : EFS ? Burst Mode, EBS, emptyDir Size Limit 설정
    Boto3 활용한 S3 Data Upload : 외부 데이터 연동 Interface 제공 위함 (S3 API)
    S3 Bucket LifeCycle 관리
    HelmChart 사용한 values.yaml 관리
    Container별 Resource 관리
    Livenessprobe shell 파일 작성 후 적용 : Container App Log 파일 감시, ctime이 특정 시간 초과 시 재기동 로직 구현
    RDS (Aurora MySQL) Reader/Writer, SlowQuery 관리
    Cronjob을 사용한 EFS 파일 삭제 관리 (IA 미사용)
    Secret/ConfigMap, IAM 및 ServiceAccount 관리
    MSK Upgrade, 보안패치 모니터링, Topic 생성 및 파티션 관리
    ALB / NLB 설정 및 Ingress 관리
    Container Restart 이력 관리


프로젝트명 : SKT TANGO Data 수집부 구조개선
- 발주처 : SK C&C / SKTelecom
- 프로젝트 기간 : 2023.07 ~ 2023.12
- 개요 : TANGO 연동 대상 시스템의 지속적인 확대에 따라 수집부의 중요성이 증가하고 있어 기존 수집부 구성 및 관리의 고도화 필요로 
    중요 장비에 대해 수집 상태 관리 모니터링 기능 개발 
    (파일 수집 여부, 파일 사이즈, 파일 수 모니터링 및 장비명/데이터 종류에 따라 임계치 설정하여 이벤트 발생 기능)
- 담당역할 : TANGO Data 수집부 구조개선 프로젝트 매니저 및 백엔드 개발자
- 주요 성과 :
    사업 계획서 작성 및 제안 (사업 배경, 사업내용, 현황, 공수산정, 기대효과)
    요구사항 정의서 작성 (현장 VOC 반영 위한 회의 개최)
    UI 설계
    아키텍처 설계
    프로그램 목록 작성 및 백엔드 구현
    DB 설계 (MySQL) 및 구현 (Table, Partition)
    테스팅 (시나리오 케이스 작성 및 시현, 증적)
    사용자/운영자 매뉴얼 작성
    장애상황 시나리오 대응 매뉴얼 작성
    일정 관리를 위한 WBS 작성
    산출물 작성 및 관리
    ’24년, ’25년 추가 사업 제안 참여, 계약 시 프로젝트 매니저 수행 예정 (수집부 구조개선 V2, 공동운용망 모니터링, NEXT-TANGO 등)
- 개발 상세 내용 :
    [Python, Confluent-Kafka, Side-car Container]
        Confluent-kafka를 활용한 Kafka (MSK) Producer 구현
        - Raw Data의 파일명, 사이즈, 라인수, Version 등 파일 정보를 JSON Message로 만들어 Topic에 전송
        - 기존 Container의 데이터 처리 속도에 영향을 주어 별도의 Container로 구성 (Side-car Container)
    [Java, Spring Boot, Rest API, Kafka Listener, RDS(Aurora)]
        AcknowledgeMessageListener를 사용한 Kafka Listener 구현
        - 특정 Kafka Topic의 Consumer로 Message를 DB Table에 insert
        개별 기능을 RestAPI로 구현
        1. DB Table에 Insert된 데이터를 group by하여 통계용 Table에 결과를 insert하는 RestAPI 구현
        2. 데이터의 수집 주기에 따라 이벤트를 생성하는 RestAPI 구현
        이벤트는 전체 미수집일 경우, 미수집 이벤트 발생
        장비별 임계치를 UI에서 등록하여 임계치 이상 데이터가 증가/감소할 경우, 단계별 이벤트 발생
        데이터는 5분, 15분, 60분 데이터로 수집 주기에 따라 구분하며 각각 RestAPI 별도 구현
        1) 장비 정보 테이블과 장비별 임계치 테이블 join
        2) 1일 전, 동일 시간대 데이터를 기준으로 right join
        3) 8일 ~ 2일 전, 동일 시간대 평균 데이터를 기준으로 left join
        4) 금일 현재 시간대 데이터와 left join
        5) 금일 데이터와 1일 전 데이터의 증감율과 금일 데이터와 8일 ~ 2일 전 동일 시간대 평균 데이터 증감율을
        계산하여 감소는 AND 조건, 증가는 OR 조건으로 이벤트 상세 내용 생성
        6) 위 결과를 이벤트 Table에 Insert
        3. 발생한 이벤트를 SMS/MMS로 전송하는 RestAPI 구현
        이벤트 테이블에 저장된 데이터를 특정 주기마다 insert 시간을 기준으로 조회하여 SMS/MMS 전송
        프로젝트 내부 openAPI를 사용하여 SMS/MMS 모듈 연동
        4. 일정 시간 이상 이벤트 발생이 없을 경우, 과거 이벤트를 Clear하는 Rest API 구현
        5. Raw Data의 Version 정보를 토대로 신규 Version이 수집될 경우 이벤트를 발생하는 Rest API 구현
        6. 장비정보 테이블에서 운용 상태코드가 철거 장비일 경우, 해당 장비의 모든 이벤트를 Clear하는 Rest API 구현
        - 모든 RestAPI 호출은 Cronjob으로 구현 (필요에 따라 기능 on/off)
        Cronjob에서 1분 가량 지연되어 실행되는 경우가 있어 검증 로직 추가
        이유는 실행되는 시간이 이벤트 발생 Query의 기준 시간 조건으로 추가되기 때문
        실행되는 시간을 계산하여 가장 가까운 5분, 15분으로 시간을 수정하는 로직
        예를 들어, 16분에 실행될 경우 15분으로 수정, 06분에 수정될 경우 05분으로 수정되는 로직
        - 또한 8일 전, 2일 전 등 수시로 수정될 수 있는 값은 모두 config 파일에서 관리하여 유지보수의 편의성 고려
        - RDS(Aurora) Table 및 Partition 설계

--자소서
새로운 기술 습득에 대한 노력 : AWS Public Cloud 구축 경험
2022년 3월, 현재 재직 중인 회사로부터 ON-PREMISE 환경에서 클라우드 환경으로 이전하는 클라우드 전환 사업의 업무를 맡게 되었습니다. 새로운 기술을 배울 기회에 도전하고 싶었습니다. 
Docker, K8S, HelmChart에 관해 공부했습니다. SM 업무를 하면서 서버와 프로세스 증설/철거 등 유휴 자원에 대한 고민이 많았고 ON-DEMAND 방식 클라우드 기술의 매력을 느꼈습니다. 
DEV 환경에서 K8S를 적용하는 PoC가 종료되고 PROD 환경에서 AWS가 도입되면서 CI/CD, EKS, EC2 등을 사용하면서 Public Cloud 환경을 정상적으로 반영하였습니다. 
그리고 AWS에 대한 관심으로 AWS Certified Solutions Architect Associate 자격증을 공부하고 있습니다. 네이버 클라우드에 대한 관심도 있어 ’24년 3월 Naver Cloud Platform Certified Expert 자격증을 취득했습니다.
현재 참여하고 있는 프로젝트에서는 권한이 제한되어 있어 많은 기술을 사용하기에 어렵습니다. 클라우드 엔지니어와 개발자로서 더 많은 기회를 얻어 도전하고 싶습니다. 새로운 기술에 대한 관심이 많습니다.

업무 내.외 커뮤니케이션을 담당합니다.
지식이 있으면 공유하고 의견을 나누는 것을 좋아합니다. 특히 타인과의 협업을 선호합니다. 상호 간 커뮤니케이션이 중요한 업무에서 좋은 성과를 이루었습니다. 
운영 업무에서는 고객사와 개발팀 간의 다리가 되어 의견을 조율하여 고객사의 Needs에 맞춘 개발팀의 결과물이 나올 수 있도록 운영 담당자로서 커뮤니케이션을 담당하였습니다. 
프로젝트 매니저로서 고객사의 Needs에 따른 요구 사항 정의에 많은 시간을 할애하였고 프로젝트 중간에 추가되는 요구사항에 대해서도 일부는 수용하면서 
프로젝트 기간 내 정상 종료가 될 수 있도록 고객사 프로젝트 매니저와의 의견 조율에 노력하였습니다.
클라우드에 대한 지식을 나누기 위해 후배들에게 과제를 내주면서 교육하고 있습니다. 생각하지 못했던 질문들에 대해 같이 공부하고 찾아 익히는 것이 즐겁습니다.

책임감에 따른 높은 성장성 : 프로젝트 매니저 경험
재 재직 중인 회사에 입사한 지 불과 5개월 만에 신규 팀의 운영(SM) 업무를 인수·인계받았습니다. 초기에 빈번하게 장애 상황이 발생하게 되면서 운영 담당자로서 업무에 대한 안정화를 원했습니다. 
일과 시간 내에는 운영 업무를 하고 이후 시간은 개인적으로 할애하여 발생했던 과거 장애 상황을 정리하고 메뉴얼화했습니다. 개선점을 도출하기 위해 선배님들과 의논하며 운영 업무를 안정화했습니다. 
이러한 노력을 인정받아 대리로 1년 조기 진급하게 되었고 그동안 익혔던 운영 업무에 대한 지식과 스킬들을 활용하여 운영 업무 고도화 사업의 프로젝트 매니저로 선정되었습니다. 
프로젝트 매니저와 백엔드 개발 업무를 진행했고 팀원, 고객사 간의 의견을 조율하며 프로젝트 리더로서 노력했습니다. 그 결과 2024년 과장으로 1년 조기 진급하게 되었습니다. 
책임감은 저를 강하게 만들고 성장시키고 있습니다. 또한 2024~2025년도 주요 프로젝트 사업 제안에 참여하고 있으며 계약이 성사될 경우 프로젝트 매니저 역할을 담당할 예정입니다.



