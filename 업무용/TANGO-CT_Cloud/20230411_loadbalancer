# 2023.04.11 load balancer


load balancer란 ?
    - 단일 접점 포인트를 제공, traffic 등에 따라 적절하게 분배하는 역할

ALB (Application Load Balancer)
    - 웹 서비스에 걸리는 부하를 분산해주는 로드 밸런서
    - 갑작스런 트래픽 증가를 막기 위함
    - 장점
        1. 고가용성 지원
        2. 사용자 인증 등 보안 향상
        3. 다양한 레벨의 부하에 대한 유연한 응답
        4. 애플리케이션 밀착 모니터링 검수

ELB (Elastic Load Balancer)와의 차이점
    - 오리지널 AWS 로드 밸런싱 서비스는 ELB
    - ALB가 추가되면서 기존의 ELB는 CLB (Classic Load Balancer)로 명칭이 변경됨
    - 용어로 따지면, ALB=ELB=CLB
    - 현재는 NLB (Network Load Balancer)의 추가로 기능이 강화됨

과거 ELB는 4Layer(전송 계층) 및 7Layer(애플리케이션 계층)에서 로드 밸런서 역할을 해왔음
4 Layer에서는 네트워크 패킷의 검사 없이 부하를 분산했고
7 Layer에서는 패킷의 HTTP, HTTPS 정보에 접근하여 더욱 효율적인 부하 분산을 수행해왔음

ALB는 7 Layer에서만 작동하는 로드 밸런서로 기존 ELB와는 달리 애플리케이션 계층에서만 특별한 동작 스타일을 갖춤
    - WebSocket 및 HTTP/2 지원 : 표준 프로토콜 지원을 통해 네트워크 트래픽을 줄이고 접속의 효율을 높임
    - 최신 애플리케이션 아키텍처 맞춤형 사용 : 마이크로 서비스, 컨테이너와 같이 가장 최신 버전의 애플리케이션 아키텍처에 맞도록 ALB 설계/사용 가능, 보다 나은 요청 라우팅을 지원하기 때문에 자유롭고 유연한 로드 밸런서로의 사용이 가능
    - 타겟 그룹에 라우팅 가능 : ALB는 인스턴스 별로 묶어 각기 다른 서버 그룹, 타겟 그룹에 적용할 수 있고 라우팅 설정 가능, 직접 인스턴스화 되는 ELB와 달리 서비스를 독립적으로 실행할 수 있고, 여러 라우팅 규칙을 정의할 수 있음

ELB를 ALB로 변경할 때의 이점
    1. 여러 개의 로드 밸런서를 통합하여 비용 절감 효과
    2. WebSocket, HTTP/2 등 성능 향상, 효율 증대
    3. AWS WAF 사용을 통해 보안 강화
    4. 액세스 로그와 같은 정보를 압축 형태로 저장하여 람다 함수로 등록 가능

NLB (Network Load Balancer)
    - 고성능을 요구하는 환경에서 부하 분산에 적잡한 솔루션 (상대적 비용 높음)
    - 낮은 레이턴시로 초당 수백만 건의 요청을 처리할 수 있고, 갑작스러운 트래픽 증가와 변화에도 최적화 되어 있음



* 내가 참여했던 프로젝트에서, NLB가 꼭 필요한 대상이 아니면 ALB로 전환하여 사용했음

